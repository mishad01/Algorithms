class Solution {
public:
    bool yes(char s){
         if(s>='A' && s<='Z'){

      s += 32;

      }

   if(s=='a' || s=='o' || s=='e' || s=='i' || s=='u'){

      return true;}

      return false;

   }
    string reverseVowels(string s) {
        	 string t;

	 for(auto p: s) {

	    if(yes(p))

	        t.push_back(p);

	  }

	 for(int p=0;p<s.size();p++){

	       if(yes(s[p])){

	          s[p]= t[t.size()-1];

	          t.pop_back();

	          }

	 }

	 return s;
    }
};

class Solution {
    bool isVowel(const char &c){
        if(c=='a' || c=='e' || c=='i' || c=='o' || c=='u' ||
        c=='A' || c=='E' || c=='I' || c=='O' || c=='U')
            return true;
        
        return false;
    }
public:
    string reverseVowels(string s) {
        int l = 0, r = s.size()-1;
        while(l < r){
            if(isVowel(s[l]) && isVowel(s[r])) {
                swap(s[l],s[r]);
                ++l;--r;
                }
            else if(isVowel(s[l])) --r;
            else if(isVowel(s[r])) ++l;
            else{
                ++l;
                --r;
            }
        }

        return s;
    }
};

